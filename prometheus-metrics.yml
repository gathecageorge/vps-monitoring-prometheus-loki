version: '3.9'

volumes:
  prometheus_data: {}

services:
  node-exporter:
    image: prom/node-exporter:latest
    user: root
    volumes:
      - /etc/machine-id:/etc/machine-id:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    labels:
      - promtail.logs=true
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=9100

  cadvisor:
    restart: unless-stopped
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    command:
      - --docker_only
    labels:
      - promtail.logs=true
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=8080

  prometheus:
    image: prom/prometheus:latest
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus
      - ./prometheus/global.yml:/etc/prometheus/prometheus.yml
    entrypoint: sh /etc/prometheus/entrypoint.sh
    command: ["/bin/prometheus"]
    restart: unless-stopped
    depends_on:
      - node-exporter
      # - cadvisor
    labels:
      - promtail.logs=true
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=9090
